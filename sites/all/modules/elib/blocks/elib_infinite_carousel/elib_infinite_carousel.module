<?php

function elib_infinite_carousel_block($op = 'list', $delta = 0, $edit = array()) {
  $block = array();
  $cache_name = 'elib_infinite_carousel_cache' . $delta;
  $cache_table = 'cache';

  if ($op == 'list') {
    $block[0]['info'] = t('eLIB infinite carousel');
    $block[0]['cache'] = BLOCK_NO_CACHE;
  }
  else if ($op == 'configure' && $delta == 0) {
    $form = array();

    $form['items'] = array(
      '#type' => 'textfield',
      '#title' => t('Number of items in the carousel'),
      '#default_value' => variable_get('elib_infinite_carousel_block_items', 49),
    );
    $form['search'] = array(
      '#type' => 'textfield',
      '#title' => t('Search query string'),
      '#default_value' => variable_get('elib_infinite_carousel_block_query', '(dc.date = 2011) AND dc.type = "Lydbog (net)"'),
    );

    return $form;
  }
  else if ($op == 'save' && $delta == 0) {
    variable_set('elib_infinite_carousel_block_items',  (int) $edit['items']);
    variable_set('elib_infinite_carousel_block_query',  $edit['search']);
    variable_set('elib_infinite_carousel_block_title',  $edit['title']);

    // Clear the cache.
    cache_clear_all($cache_name, $cache_table);
  }
  else if ($op == 'view' && $delta == 0) {

    module_load_include('client.inc', 'ting');
    drupal_add_css( drupal_get_path('module', 'elib_infinite_carousel') . '/elib_infinite_carousel.css' );
    drupal_add_js( drupal_get_path('module', 'elib_infinite_carousel') . '/elib_infinite_carousel.js' );

    $cache = cache_get($cache_name, $cache_table);

    if (isset($cache->data)) {
      $items = $cache->data;
    }
    else {
      $query = variable_get('elib_infinite_carousel_block_query', '(dc.date = 2012) AND dc.type = "Lydbog (net)"');
      $limit = variable_get('elib_infinite_carousel_block_items', 49);

      $newlimit = 25;
      $iterations = ceil($limit/$newlimit);

      $ting_objects = array();
      for ($i=0; $i < $iterations; $i++){

        $result = array();
        $page = ($i+1);

        if (($newlimit * $page) > $limit) {
          $newlimit =  $limit % $newlimit;
        }

        $result = ting_do_search($query, $page, $newlimit);

        if (($result instanceof TingClientSearchResult) && ($result->numTotalObjects)) {
          foreach ($result->collections as $collection) {
            foreach ($collection->objects as $object) {
              $ting_objects[$object->localId] = $object;
              if(count($ting_objects) == $limit) {
                break 3;
              }
            }
          }
        }
      }

      // If we found any books, process them into list items adding book covers.
      if (!empty($ting_objects)) {
        $items = array();
        foreach ($ting_objects as $local_id => $object) {
          $image = elib_book_cover($object->record['dc:identifier']['oss:PROVIDER-ID'], '120_x');
          $alt = t('@titel af @forfatter',array('@titel' => $object->title, '@forfatter' => $object->creators_string));
          $items[$local_id] = '<li><a href="' . $object->url . '" title="' . $alt . '">' . theme('image', $image, $alt, $alt, NULL, FALSE) . '</a></li>';
        }

        // Save the carousel items in the cache (24 timer).
        cache_set($cache_name, $items, $cache_table, time() + 86400);
      }
    }

    // Suffle items and create carousel based on the suffle.
    shuffle($items);
    $content = '';
    foreach ($items as $item) {
      $content .= $item;
    }

    $block['subject'] = variable_get('elib_infinite_carousel_block_title', t("Nyeste eb√∏ger"));
    $block['content'] = '
      <div class="infiniteCarousel">
        <div class="wrapper">
          <ul>' . $content .'</ul>
        </div>
      </div>
    ';
  }

  return $block;
}
